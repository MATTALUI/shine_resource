=render 'layouts/navbar'
.row
  .col.s10.offset-s1
    .card.grey.lighten-3
      .card-content
        .card-title
        .card-body
          %p.center-text Specify details for every client involved.
          %hr
          =form_tag notes_group_notes_path do |f|
            -@notes.each do |note|
              -presets = (@presets[note.client_id].to_a + @presets[nil].to_a).group_by(&:preset_type)
              %ul.collapsible.client_note{data: {collapsible: "expandible", client_id: note.client.id}}
                %li
                  .collapsible-header.active.grey.white-text
                    =note.client
                  .collapsible-body.white
                    .row
                      .col.s3
                        %label Date
                        =text_field_tag "date", @note_group.date.strftime('%-m/%-d/%Y'), readonly:true
                      .col.s4
                        %label Start time
                        -start_time = @note_group.start_time + (current_user.utc_offset * 3600)
                        =text_field_tag "updates[#{note.client.id}]start_time", start_time.strftime("%l:%M%p"), class: "timepicker start_time"
                      .col.s4
                        %label End time
                        -end_time = @note_group.end_time + (current_user.utc_offset * 3600)
                        =text_field_tag "updates[#{note.client.id}]end_time", end_time.strftime("%l:%M%p"), class: "timepicker end_time"
                      .col.s1.match-container
                        %button.btn.grey.match-time=fa_icon('clock')

                    .row
                      .col.s12
                        =select_tag "updates[#{note.client.id}]service_type_id", options_from_collection_for_select(@service_types, :id, :name, note.service_type_id)
                      .col.s12
                        %label Transportation Trips
                        =number_field_tag "updates[#{note.client.id}]transportation_trips", note.transportation_trips, class: "white"
                      .col.s12
                        -(presets[""].to_a+presets["location"].to_a).each do |preset|
                          .chip.clickable.chip-preset{data: {presetType: "location", value: preset.text }}
                            =preset
                      .col.s12
                        %label Locations and Activities
                        =text_area_tag "updates[#{note.client.id}]location", note.location, class: "white"

                      .col.s12
                        -(presets[""].to_a+presets["support_provided"].to_a).each do |preset|
                          .chip.clickable.chip-preset{data: {presetType: "support_provided", value: preset.text }}
                            =preset
                      .col.s12
                        %label Support provided
                        =text_area_tag "updates[#{note.client.id}]support_provided", note.support_provided, class: "white"

                      .col.s12
                        -(presets[""].to_a+presets["service_description"].to_a).each do |preset|
                          .chip.clickable.chip-preset{data: {presetType: "service_description", value: preset.text }}
                            =preset
                      .col.s12
                        %label Services description
                        =text_area_tag "updates[#{note.client.id}]service_description", note.service_description, class: "white"

                      .col.s12
                        -(presets[""].to_a+presets["interactions"].to_a).each do |preset|
                          .chip.clickable.chip-preset{data: {presetType: "interactions", value: preset.text }}
                            =preset
                      .col.s12
                        %label Interactions
                        =text_area_tag "updates[#{note.client.id}]interactions", note.interactions, class: "white"

                      .col.s12
                        -(presets[""].to_a+presets["comments"].to_a).each do |preset|
                          .chip.clickable.chip-preset{data: {presetType: "comments", value: preset.text }}
                            =preset
                      .col.s12
                        %label Comments
                        =text_area_tag "updates[#{note.client.id}]comments", note.comments, class: "white"
                      %p.center-text
                        %a.clickable.incident-trigger Fill Out Incident Report
                    .row.incident-report.hide
                      =hidden_field_tag "updates[#{note.client.id}]incident_report[incident_report_filed]", false, id: "ir-#{note.client.id}"
                      .col.s6
                        %label Time Of Incident
                        =text_field_tag "updates[#{note.client.id}]incident_report[start_time]", nil, class: "white timepicker"
                      .col.s6
                        %label Duration(minutes)
                        =number_field_tag "updates[#{note.client.id}]incident_report[duration]", nil, class: "white"
                      .col.s6
                        =check_box_tag "updates[#{note.client.id}]incident_report[observed_directly]", "1", nil, id: "observed_directly-#{note.client.id}"
                        %label{for: "observed_directly-#{note.client.id}"} Observed Directly
                      .col.s16
                        =check_box_tag "updates[#{note.client.id}]incident_report[likely_to_reoccur]", "1", nil, id: "likely-#{note.client.id}"
                        %label{for: "likely-#{note.client.id}"} Likely to Reoccur
                      .col.s12
                        %label Codes
                        =text_field_tag "updates[#{note.client.id}]incident_report[codes]", nil, class: "white"
                      .col.s12
                        %label Location
                        =text_field_tag "updates[#{note.client.id}]incident_report[location]", nil, class: "white"
                      .col.s12
                        %label Preface
                        =text_area_tag "updates[#{note.client.id}]incident_report[preface]", nil, placeholder: "Describe what was happening prior to incident and possible causes of the incident.", class: "white"
                      .col.s12
                        %label Description
                        =text_area_tag "updates[#{note.client.id}]incident_report[description]", nil, placeholder: "Detailed description of incident.", class: "white"
                      .col.s12
                        %label Action Taken
                        =text_area_tag "updates[#{note.client.id}]incident_report[action_taken]", nil, placeholder: "Describe action taken or treatment given and/or Instructions from Nurseâ€™s Observations during time of incident or during follow-up around time of incident.", class: "white"
                      .col.s12
                        %label Alternative Action
                        =text_area_tag "updates[#{note.client.id}]incident_report[alternative_action]", nil, placeholder: "Is there anything that could have been done differently before, during, or after this incident to have kept incident from occurring?", class: "white"
                      .col.s12
                        %label Witnesses
                        =text_area_tag "updates[#{note.client.id}]incident_report[witnesses]", nil, placeholder: "Witness/Others Involved.", class: "white"
                      .col.s12
                        =check_box_tag "updates[#{note.client.id}]incident_report[hrc_review]", "1", nil, id: "hrc_review-#{note.client.id}"
                        %label{for: "hrc_review-#{note.client.id}"} Incident needs to be reviewed by HRC
                      .col.s12
                        =check_box_tag "updates[#{note.client.id}]incident_report[ap_review]", "1", nil, id: "ap_review-#{note.client.id}"
                        %label{for: "ap_review-#{note.client.id}"} Incident needs to be reviewed by Adult Protection
                      .col.s12
                        =check_box_tag "updates[#{note.client.id}]incident_report[critical]", "1", nil, id: "critical-#{note.client.id}"
                        %label{for: "critical-#{note.client.id}"} Critical Incident
                      .col.s12
                        =check_box_tag "updates[#{note.client.id}]incident_report[law_review]", "1", nil, id: "law_review-#{note.client.id}"
                        %label{for: "law_review-#{note.client.id}"} Incident Needs to be reviewed by law enforcem2ent
                      .col.s12
                        =check_box_tag "updates[#{note.client.id}]incident_report[followup_needed]", "1", nil, id: "followup_needed-#{note.client.id}"
                        %label{for: "followup_needed-#{note.client.id}"} Critical Incident

            .row
              =submit_tag "Submit Reports", class: "btn #{org_color} offset-s9 col s3"
        .card-action

:javascript
  $('.chip-preset').on('click', function(event){
    var $chip, val, type, target, $ele, originalValue, newValue
    $chip = $(this);
    val = $chip.data('value');
    type = $chip.data('presettype');
    target = "[name$='"+type+"']";
    $ele = $chip.closest('.client_note').find(target)
    originalValue = $ele.val();
    if (val[val.length-1] !== "."){
      val = val + "."
    }
    newValue = originalValue + " " + val;
    $ele.val(newValue);
  });

  $('.incident-trigger').on('click', function(event){
    let handle = "#ir-"+ $(this).closest(".client_note").data("clientId");
    $(handle).val(!($(handle).val() === "true"));
    $(this).closest('.client_note').find('.incident-report').toggleClass('hide');
  });

  $(".match-time").on("click", function(event){
    event.preventDefault();
    if(confirm("This will update all other times with clients for this day. Are you sure?")){
      let $target = $(event.target);
      let $chosenNote = $target.closest('.client_note');
      let start_time = $chosenNote.find('.start_time').first().val();
      let end_time = $chosenNote.find('.end_time').first().val();
      $(".client_note").each(function(i,ele){
        let $note = $(ele);
        $note.find('.start_time').first().val(start_time);
        $note.find('.end_time').first().val(end_time);
      });
    }
  });
